version: "3"

services:

  redis:
    image: redis:3-alpine
    environment:
      - TZ=${TZ}
    ports: ["6379:6379"]
    networks:
      - front-tier

  postgres:
    image: postgres:9.6-alpine
    ports: ["5432:5432"]
    environment:
      - POSTGRES_USER=postgres
      - TZ=${TZ}
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - back-tier

  vote:
    image: "vertxswarm/verticle-vote:${TAG_VOTE}"
    ports:
      - 8080:8080
    environment:
      - TZ=${TZ}
    restart: always
    depends_on:
      - redis
    networks:
      - front-tier
    labels:
      - "traefik.frontend.entryPoints=http"
      - "traefik.backend=vote"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:vote.local"

  result:
    image: "vertxswarm/verticle-result:${TAG_RESULT}"
    ports:
      - 8081:8081
    restart: always
    environment:
      - TZ=${TZ}
    depends_on:
      - postgres
    networks:
      - back-tier
    labels:
      - "traefik.frontend.entryPoints=http"
      - "traefik.backend=result"
      - "traefik.port=8081"
      - "traefik.frontend.rule=Host:result.local"

  worker:
    image: "vertxswarm/verticle-worker:${TAG_WORKER}"
    environment:
      - TZ=${TZ}
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - front-tier
      - back-tier

  sozu:
    image: geal/sozu
    command: ["start", "-c", "/etc/sozu/sozu.toml"]
    volumes:
      - ./reverse-proxy/sozu/config.toml:/etc/sozu/sozu.toml
      - sozu-socket:/var/run/sozu
    ports:
      - "80:80"
    networks:
      - front-tier
      - back-tier

  sozu-manager:
    image: geal/manager
    #entrypoint: ["sh"]
    command: ["--config", "/etc/sozu/sozu.toml", "--api", "http://traefik:8080/api"]
    volumes:
      - ./reverse-proxy/sozu/config.toml:/etc/sozu/sozu.toml
      - sozu-socket:/var/run/sozu
    depends_on:
      - sozu
      - traefik
    networks:
      - front-tier
      - back-tier

  traefik:
    image: traefik:1.2.0
    command: --web --docker --docker.domain=${CU_DOMAIN} --logLevel=DEBUG --docker.exposedbydefault=true --docker.watch=true
    environment:
      - "TZ=${TZ}"
    ports:
      - "9090:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./reverse-proxy/discovery/traefik.toml:/traefik.toml
    labels:
      - "traefik.enable=false"
    networks:
      - front-tier
      - back-tier

volumes:
  db-data:
  sozu-socket:

networks:
  front-tier:
  back-tier:



